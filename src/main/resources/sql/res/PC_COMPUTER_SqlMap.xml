<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PC_COMPUTER">


	<resultMap class="com.aic.paas.provider.ps.bean.PcComputer" id="queryResult">
		<result column="ID" jdbcType="BIGINT" property="id"/>	<!-- ID -->
		<result column="CODE" jdbcType="VARCHAR" property="code"/>	<!-- 服务器编号 -->
		<result column="ROOM_ID" jdbcType="BIGINT" property="roomId"/>	<!-- 所属机房 -->
		<result column="LOCATION" jdbcType="VARCHAR" property="location"/>	<!-- 所在机架 -->
		<result column="DATA_CENTER_ID" jdbcType="BIGINT" property="dataCenterId"/>	<!-- 所属数据中心ID -->
		<result column="RES_CENTER_ID" jdbcType="BIGINT" property="resCenterId"/>	<!-- 所属资源中心ID -->
		<result column="NET_ZONE_ID" jdbcType="BIGINT" property="netZoneId"/>	<!-- 所属网络区域ID -->
		<result column="IP" jdbcType="VARCHAR" property="ip"/>	<!-- 服务器IP -->
		<result column="CPU_COUNT" jdbcType="INTEGER" property="cpuCount"/>	<!-- CPU核数 -->
		<result column="CPU_OFFER" jdbcType="INTEGER" property="cpuOffer"/>	<!-- CPU可用于集群的核数 -->
		<result column="CPU_FREQUENCY" jdbcType="BIGINT" property="cpuFrequency"/>	<!-- CPU主频 -->
		<result column="CPU_MODEL" jdbcType="VARCHAR" property="cpuModel"/>	<!-- CPU型号 -->
		<result column="MEM_SIZE" jdbcType="BIGINT" property="memSize"/>	<!-- 内存大小 -->
		<result column="MEM_OFFER" jdbcType="BIGINT" property="memOffer"/>	<!-- 可用于集群的内存 -->
		<result column="MEM_TYPE" jdbcType="VARCHAR" property="memType"/>	<!-- 内存类型 -->
		<result column="DISK_SIZE" jdbcType="BIGINT" property="diskSize"/>	<!-- 硬盘大小 -->
		<result column="DISK_TYPE" jdbcType="VARCHAR" property="diskType"/>	<!-- 存储类型 -->
		<result column="BAND_WIDTH" jdbcType="BIGINT" property="bandWidth"/>	<!-- 带宽 -->
		<result column="OS_NAME" jdbcType="VARCHAR" property="osName"/>	<!-- 操作系统 -->
		<result column="LOGIN_NAME" jdbcType="VARCHAR" property="loginName"/>	<!-- 登录账号 -->
		<result column="LOGIN_PWD" jdbcType="VARCHAR" property="loginPwd"/>	<!-- 登录密码 -->
		<result column="EX_SWITCH" jdbcType="VARCHAR" property="exSwitch"/>	<!-- 交换机 -->
		<result column="SUB_NET" jdbcType="VARCHAR" property="subNet"/>	<!-- 子网 -->
		<result column="MODEM" jdbcType="VARCHAR" property="modem"/>	<!-- 机型 -->
		<result column="PHYSICAL_COMPUTER" jdbcType="VARCHAR" property="physicalComputer"/>	<!-- 物理机 -->
		<result column="REMARK" jdbcType="VARCHAR" property="remark"/>	<!-- 描述 -->
		<result column="STATUS" jdbcType="INTEGER" property="status"/>	<!-- 状态 -->
		<result column="CUSTOM_1" jdbcType="BIGINT" property="custom1"/>	<!-- 备用字段_1 -->
		<result column="CUSTOM_2" jdbcType="BIGINT" property="custom2"/>	<!-- 备用字段_2 -->
		<result column="CUSTOM_3" jdbcType="BIGINT" property="custom3"/>	<!-- 备用字段_3 -->
		<result column="CUSTOM_4" jdbcType="VARCHAR" property="custom4"/>	<!-- 备用字段_4 -->
		<result column="CUSTOM_5" jdbcType="VARCHAR" property="custom5"/>	<!-- 备用字段_5 -->
		<result column="CUSTOM_6" jdbcType="VARCHAR" property="custom6"/>	<!-- 备用字段_6 -->
		<result column="USE_STATUS" jdbcType="INTEGER" property="useStatus"/>	<!-- 使用状态 -->
		<result column="DATA_STATUS" jdbcType="INTEGER" property="dataStatus"/>	<!-- 数据状态 -->
		<result column="CREATE_TIME" jdbcType="BIGINT" property="createTime"/>	<!-- 创建时间 -->
		<result column="MODIFY_TIME" jdbcType="BIGINT" property="modifyTime"/>	<!-- 修改时间 -->
	</resultMap>
	

	<sql id="sql_query_where">
		<isNotEmpty prepend="and" property="cdt.id" >
			ID = #cdt.id:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids" >
			ID in ($ids$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startId" >
			<![CDATA[ ID >= #cdt.startId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endId" >
			<![CDATA[ ID <= #cdt.endId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.code" >
			CODE like #cdt.code:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.codeEqual" >
			CODE = #cdt.codeEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="codes" >
			CODE in ($codes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.roomId" >
			ROOM_ID = #cdt.roomId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="roomIds" >
			ROOM_ID in ($roomIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startRoomId" >
			<![CDATA[ ROOM_ID >= #cdt.startRoomId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endRoomId" >
			<![CDATA[ ROOM_ID <= #cdt.endRoomId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.location" >
			LOCATION like #cdt.location:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataCenterId" >
			DATA_CENTER_ID = #cdt.dataCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataCenterIds" >
			DATA_CENTER_ID in ($dataCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataCenterId" >
			<![CDATA[ DATA_CENTER_ID >= #cdt.startDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataCenterId" >
			<![CDATA[ DATA_CENTER_ID <= #cdt.endDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.resCenterId" >
			RES_CENTER_ID = #cdt.resCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="resCenterIds" >
			RES_CENTER_ID in ($resCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startResCenterId" >
			<![CDATA[ RES_CENTER_ID >= #cdt.startResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endResCenterId" >
			<![CDATA[ RES_CENTER_ID <= #cdt.endResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.netZoneId" >
			NET_ZONE_ID = #cdt.netZoneId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="netZoneIds" >
			NET_ZONE_ID in ($netZoneIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startNetZoneId" >
			<![CDATA[ NET_ZONE_ID >= #cdt.startNetZoneId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endNetZoneId" >
			<![CDATA[ NET_ZONE_ID <= #cdt.endNetZoneId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.ip" >
			IP like #cdt.ip:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.ipEqual" >
			IP = #cdt.ipEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ips" >
			IP in ($ips$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.cpuCount" >
			CPU_COUNT = #cdt.cpuCount:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cpuCounts" >
			CPU_COUNT in ($cpuCounts$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCpuCount" >
			<![CDATA[ CPU_COUNT >= #cdt.startCpuCount:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCpuCount" >
			<![CDATA[ CPU_COUNT <= #cdt.endCpuCount:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.cpuOffer" >
			CPU_OFFER = #cdt.cpuOffer:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cpuOffers" >
			CPU_OFFER in ($cpuOffers$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCpuOffer" >
			<![CDATA[ CPU_OFFER >= #cdt.startCpuOffer:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCpuOffer" >
			<![CDATA[ CPU_OFFER <= #cdt.endCpuOffer:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.cpuFrequency" >
			CPU_FREQUENCY = #cdt.cpuFrequency:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cpuFrequencys" >
			CPU_FREQUENCY in ($cpuFrequencys$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCpuFrequency" >
			<![CDATA[ CPU_FREQUENCY >= #cdt.startCpuFrequency:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCpuFrequency" >
			<![CDATA[ CPU_FREQUENCY <= #cdt.endCpuFrequency:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.cpuModel" >
			CPU_MODEL like #cdt.cpuModel:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.memSize" >
			MEM_SIZE = #cdt.memSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="memSizes" >
			MEM_SIZE in ($memSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startMemSize" >
			<![CDATA[ MEM_SIZE >= #cdt.startMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endMemSize" >
			<![CDATA[ MEM_SIZE <= #cdt.endMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.memOffer" >
			MEM_OFFER = #cdt.memOffer:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="memOffers" >
			MEM_OFFER in ($memOffers$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startMemOffer" >
			<![CDATA[ MEM_OFFER >= #cdt.startMemOffer:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endMemOffer" >
			<![CDATA[ MEM_OFFER <= #cdt.endMemOffer:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.memType" >
			MEM_TYPE like #cdt.memType:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.diskSize" >
			DISK_SIZE = #cdt.diskSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="diskSizes" >
			DISK_SIZE in ($diskSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDiskSize" >
			<![CDATA[ DISK_SIZE >= #cdt.startDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDiskSize" >
			<![CDATA[ DISK_SIZE <= #cdt.endDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.diskType" >
			DISK_TYPE like #cdt.diskType:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.bandWidth" >
			BAND_WIDTH = #cdt.bandWidth:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="bandWidths" >
			BAND_WIDTH in ($bandWidths$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startBandWidth" >
			<![CDATA[ BAND_WIDTH >= #cdt.startBandWidth:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endBandWidth" >
			<![CDATA[ BAND_WIDTH <= #cdt.endBandWidth:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.osName" >
			OS_NAME like #cdt.osName:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.loginName" >
			LOGIN_NAME like #cdt.loginName:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.loginNameEqual" >
			LOGIN_NAME = #cdt.loginNameEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="loginNames" >
			LOGIN_NAME in ($loginNames$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.loginPwd" >
			LOGIN_PWD like #cdt.loginPwd:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.loginPwdEqual" >
			LOGIN_PWD = #cdt.loginPwdEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="loginPwds" >
			LOGIN_PWD in ($loginPwds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.exSwitch" >
			EX_SWITCH like #cdt.exSwitch:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.subNet" >
			SUB_NET like #cdt.subNet:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modem" >
			MODEM like #cdt.modem:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.physicalComputer" >
			PHYSICAL_COMPUTER like #cdt.physicalComputer:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.remark" >
			REMARK like #cdt.remark:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.status" >
			STATUS = #cdt.status:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="statuss" >
			STATUS in ($statuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startStatus" >
			<![CDATA[ STATUS >= #cdt.startStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endStatus" >
			<![CDATA[ STATUS <= #cdt.endStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom1" >
			CUSTOM_1 = #cdt.custom1:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom1s" >
			CUSTOM_1 in ($custom1s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom1" >
			<![CDATA[ CUSTOM_1 >= #cdt.startCustom1:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom1" >
			<![CDATA[ CUSTOM_1 <= #cdt.endCustom1:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom2" >
			CUSTOM_2 = #cdt.custom2:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom2s" >
			CUSTOM_2 in ($custom2s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom2" >
			<![CDATA[ CUSTOM_2 >= #cdt.startCustom2:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom2" >
			<![CDATA[ CUSTOM_2 <= #cdt.endCustom2:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom3" >
			CUSTOM_3 = #cdt.custom3:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom3s" >
			CUSTOM_3 in ($custom3s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom3" >
			<![CDATA[ CUSTOM_3 >= #cdt.startCustom3:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom3" >
			<![CDATA[ CUSTOM_3 <= #cdt.endCustom3:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom4" >
			CUSTOM_4 like #cdt.custom4:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom5" >
			CUSTOM_5 like #cdt.custom5:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom6" >
			CUSTOM_6 like #cdt.custom6:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.useStatus" >
			USE_STATUS = #cdt.useStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="useStatuss" >
			USE_STATUS in ($useStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startUseStatus" >
			<![CDATA[ USE_STATUS >= #cdt.startUseStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endUseStatus" >
			<![CDATA[ USE_STATUS <= #cdt.endUseStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataStatus" >
			DATA_STATUS = #cdt.dataStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataStatuss" >
			DATA_STATUS in ($dataStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataStatus" >
			<![CDATA[ DATA_STATUS >= #cdt.startDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataStatus" >
			<![CDATA[ DATA_STATUS <= #cdt.endDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.createTime" >
			CREATE_TIME = #cdt.createTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="createTimes" >
			CREATE_TIME in ($createTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCreateTime" >
			<![CDATA[ CREATE_TIME >= #cdt.startCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCreateTime" >
			<![CDATA[ CREATE_TIME <= #cdt.endCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifyTime" >
			MODIFY_TIME = #cdt.modifyTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="modifyTimes" >
			MODIFY_TIME in ($modifyTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startModifyTime" >
			<![CDATA[ MODIFY_TIME >= #cdt.startModifyTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endModifyTime" >
			<![CDATA[ MODIFY_TIME <= #cdt.endModifyTime:BIGINT# ]]>
		</isNotEmpty>
	</sql>
	

	<sql id="sql_update_columns">
		<isNotNull prepend="," property="record.id"> 
			ID = #record.id:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.code"> 
			CODE = #record.code:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.roomId"> 
			ROOM_ID = #record.roomId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.location"> 
			LOCATION = #record.location:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.dataCenterId"> 
			DATA_CENTER_ID = #record.dataCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.resCenterId"> 
			RES_CENTER_ID = #record.resCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.netZoneId"> 
			NET_ZONE_ID = #record.netZoneId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.ip"> 
			IP = #record.ip:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.cpuCount"> 
			CPU_COUNT = #record.cpuCount:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.cpuOffer"> 
			CPU_OFFER = #record.cpuOffer:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.cpuFrequency"> 
			CPU_FREQUENCY = #record.cpuFrequency:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.cpuModel"> 
			CPU_MODEL = #record.cpuModel:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.memSize"> 
			MEM_SIZE = #record.memSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.memOffer"> 
			MEM_OFFER = #record.memOffer:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.memType"> 
			MEM_TYPE = #record.memType:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.diskSize"> 
			DISK_SIZE = #record.diskSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.diskType"> 
			DISK_TYPE = #record.diskType:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.bandWidth"> 
			BAND_WIDTH = #record.bandWidth:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.osName"> 
			OS_NAME = #record.osName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.loginName"> 
			LOGIN_NAME = #record.loginName:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.loginPwd"> 
			LOGIN_PWD = #record.loginPwd:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.exSwitch"> 
			EX_SWITCH = #record.exSwitch:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.subNet"> 
			SUB_NET = #record.subNet:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.modem"> 
			MODEM = #record.modem:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.physicalComputer"> 
			PHYSICAL_COMPUTER = #record.physicalComputer:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.remark"> 
			REMARK = #record.remark:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.status"> 
			STATUS = #record.status:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.custom1"> 
			CUSTOM_1 = #record.custom1:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom2"> 
			CUSTOM_2 = #record.custom2:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom3"> 
			CUSTOM_3 = #record.custom3:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom4"> 
			CUSTOM_4 = #record.custom4:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom5"> 
			CUSTOM_5 = #record.custom5:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom6"> 
			CUSTOM_6 = #record.custom6:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.useStatus"> 
			USE_STATUS = #record.useStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.dataStatus"> 
			DATA_STATUS = #record.dataStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.createTime"> 
			CREATE_TIME = #record.createTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.modifyTime"> 
			MODIFY_TIME = #record.modifyTime:BIGINT#
		</isNotNull>
	</sql>
	

	<sql id="sql_query_columns">
		ID, CODE, ROOM_ID, LOCATION, DATA_CENTER_ID, RES_CENTER_ID, 
		NET_ZONE_ID, IP, CPU_COUNT, CPU_OFFER, CPU_FREQUENCY, CPU_MODEL, 
		MEM_SIZE, MEM_OFFER, MEM_TYPE, DISK_SIZE, DISK_TYPE, BAND_WIDTH, 
		OS_NAME, LOGIN_NAME, LOGIN_PWD, EX_SWITCH, SUB_NET, MODEM, 
		PHYSICAL_COMPUTER, REMARK, STATUS, CUSTOM_1, CUSTOM_2, CUSTOM_3, 
		CUSTOM_4, CUSTOM_5, CUSTOM_6, USE_STATUS, DATA_STATUS, CREATE_TIME, 
		MODIFY_TIME
	</sql>
	

	

	<select id="selectList" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PC_COMPUTER.sql_query_columns" />
		from PC_COMPUTER 
			<dynamic prepend="where" >
				<include refid="PC_COMPUTER.sql_query_where"/>
			</dynamic>
		order by 
			<isNotEmpty property="orders" >
				$orders$
			</isNotEmpty>
			<isEmpty property="orders" >
				ID
			</isEmpty>
	</select>
	<select id="selectCount" parameterClass="java.util.Map" resultClass="java.lang.Long">
		select count(1) from PC_COMPUTER 
			<dynamic prepend="where" >
				<include refid="PC_COMPUTER.sql_query_where"/>
			</dynamic>
	</select>
	<select id="selectById" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PC_COMPUTER.sql_query_columns" />
		from PC_COMPUTER where ID=#id:BIGINT# and DATA_STATUS=1  
	</select>
	

	

	<insert id="insert" parameterClass="java.util.Map">
		insert into PC_COMPUTER(
			ID, CODE, ROOM_ID, LOCATION, DATA_CENTER_ID, 
			RES_CENTER_ID, NET_ZONE_ID, IP, CPU_COUNT, CPU_OFFER, 
			CPU_FREQUENCY, CPU_MODEL, MEM_SIZE, MEM_OFFER, MEM_TYPE, 
			DISK_SIZE, DISK_TYPE, BAND_WIDTH, OS_NAME, LOGIN_NAME, 
			LOGIN_PWD, EX_SWITCH, SUB_NET, MODEM, PHYSICAL_COMPUTER, 
			REMARK, STATUS, CUSTOM_1, CUSTOM_2, CUSTOM_3, 
			CUSTOM_4, CUSTOM_5, CUSTOM_6, USE_STATUS, DATA_STATUS, 
			CREATE_TIME, MODIFY_TIME)
		values (
			#record.id:BIGINT#, #record.code:VARCHAR#, #record.roomId:BIGINT#, #record.location:VARCHAR#, #record.dataCenterId:BIGINT#, 
			#record.resCenterId:BIGINT#, #record.netZoneId:BIGINT#, #record.ip:VARCHAR#, #record.cpuCount:INTEGER#, #record.cpuOffer:INTEGER#, 
			#record.cpuFrequency:BIGINT#, #record.cpuModel:VARCHAR#, #record.memSize:BIGINT#, #record.memOffer:BIGINT#, #record.memType:VARCHAR#, 
			#record.diskSize:BIGINT#, #record.diskType:VARCHAR#, #record.bandWidth:BIGINT#, #record.osName:VARCHAR#, #record.loginName:VARCHAR#, 
			#record.loginPwd:VARCHAR#, #record.exSwitch:VARCHAR#, #record.subNet:VARCHAR#, #record.modem:VARCHAR#, #record.physicalComputer:VARCHAR#, 
			#record.remark:VARCHAR#, #record.status:INTEGER#, #record.custom1:BIGINT#, #record.custom2:BIGINT#, #record.custom3:BIGINT#, 
			#record.custom4:VARCHAR#, #record.custom5:VARCHAR#, #record.custom6:VARCHAR#, #record.useStatus:INTEGER#, #record.dataStatus:INTEGER#, 
			#record.createTime:BIGINT#, #record.modifyTime:BIGINT#)
	</insert>
	

	

	<update id="updateById" parameterClass="java.util.Map">
		update PC_COMPUTER
			<dynamic prepend="set" > 
				<include refid="PC_COMPUTER.sql_update_columns"/> 
			</dynamic>
		where ID = #id:BIGINT#
	</update>
	<update id="updateByCdt" parameterClass="java.util.Map">
		update PC_COMPUTER
			<dynamic prepend="set" > 
				<include refid="PC_COMPUTER.sql_update_columns"/> 
			</dynamic>
			<dynamic prepend="where" > 
				<include refid="PC_COMPUTER.sql_query_where"/> 
			</dynamic>
	</update>
	
	

	

	<delete id="deleteById" parameterClass="java.util.Map">
		delete from PC_COMPUTER where ID = #id:BIGINT#
	</delete>
	<delete id="deleteByCdt" parameterClass="java.util.Map">
		delete from PC_COMPUTER
			<dynamic prepend="where" > 
				<include refid="PC_COMPUTER.sql_query_where"/> 
			</dynamic>
	</delete>
	



</sqlMap>
