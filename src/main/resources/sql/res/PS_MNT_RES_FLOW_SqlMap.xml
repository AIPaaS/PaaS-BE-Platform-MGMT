<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="PS_MNT_RES_FLOW">


	<resultMap class="com.aic.paas.provider.ps.bean.PsMntResFlow" id="queryResult">
		<result column="ID" jdbcType="BIGINT" property="id"/>	<!-- ID -->
		<result column="MNT_ID" jdbcType="BIGINT" property="mntId"/>	<!-- 所属租户 -->
		<result column="RES_ID" jdbcType="BIGINT" property="resId"/>	<!-- 所属资源 -->
		<result column="UP_TIME" jdbcType="BIGINT" property="upTime"/>	<!-- 更新时间 -->
		<result column="UP_TYPE" jdbcType="INTEGER" property="upType"/>	<!-- 更新类型 -->
		<result column="RES_APPLY_ID" jdbcType="BIGINT" property="resApplyId"/>	<!-- 对应申请单 -->
		<result column="DATA_CENTER_ID" jdbcType="BIGINT" property="dataCenterId"/>	<!-- 所属数据中心 -->
		<result column="RES_CENTER_ID" jdbcType="BIGINT" property="resCenterId"/>	<!-- 所属资源中心 -->
		<result column="NET_ZONE_ID" jdbcType="BIGINT" property="netZoneId"/>	<!-- 所属网络区域 -->
		<result column="BEFORE_CPU_COUNT" jdbcType="BIGINT" property="beforeCpuCount"/>	<!-- 更新前CPU个数 -->
		<result column="BEFORE_MEM_SIZE" jdbcType="BIGINT" property="beforeMemSize"/>	<!-- 更新前内存大小 -->
		<result column="BEFORE_DISK_SIZE" jdbcType="BIGINT" property="beforeDiskSize"/>	<!-- 更新前存储大小 -->
		<result column="AFTER_CPU_COUNT" jdbcType="BIGINT" property="afterCpuCount"/>	<!-- 更新后CPU个数 -->
		<result column="AFTER_MEM_SIZE" jdbcType="BIGINT" property="afterMemSize"/>	<!-- 更新后内存大小 -->
		<result column="AFTER_DISK_SIZE" jdbcType="BIGINT" property="afterDiskSize"/>	<!-- 更新后存储大小 -->
		<result column="UPOR" jdbcType="VARCHAR" property="upor"/>	<!-- 更新人 -->
		<result column="UP_DESC" jdbcType="VARCHAR" property="upDesc"/>	<!-- 更新描述 -->
		<result column="CUSTOM_1" jdbcType="BIGINT" property="custom1"/>	<!-- 备用字段_1 -->
		<result column="CUSTOM_2" jdbcType="BIGINT" property="custom2"/>	<!-- 备用字段_2 -->
		<result column="CUSTOM_3" jdbcType="BIGINT" property="custom3"/>	<!-- 备用字段_3 -->
		<result column="CUSTOM_4" jdbcType="VARCHAR" property="custom4"/>	<!-- 备用字段_4 -->
		<result column="CUSTOM_5" jdbcType="VARCHAR" property="custom5"/>	<!-- 备用字段_5 -->
		<result column="CUSTOM_6" jdbcType="VARCHAR" property="custom6"/>	<!-- 备用字段_6 -->
		<result column="DATA_STATUS" jdbcType="INTEGER" property="dataStatus"/>	<!-- 数据状态 -->
		<result column="CREATE_TIME" jdbcType="BIGINT" property="createTime"/>	<!-- 创建时间 -->
		<result column="MODIFY_TIME" jdbcType="BIGINT" property="modifyTime"/>	<!-- 修改时间 -->
	</resultMap>
	

	<sql id="sql_query_where">
		<isNotEmpty prepend="and" property="cdt.id" >
			ID = #cdt.id:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="ids" >
			ID in ($ids$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startId" >
			<![CDATA[ ID >= #cdt.startId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endId" >
			<![CDATA[ ID <= #cdt.endId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.mntId" >
			MNT_ID = #cdt.mntId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="mntIds" >
			MNT_ID in ($mntIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startMntId" >
			<![CDATA[ MNT_ID >= #cdt.startMntId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endMntId" >
			<![CDATA[ MNT_ID <= #cdt.endMntId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.resId" >
			RES_ID = #cdt.resId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="resIds" >
			RES_ID in ($resIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startResId" >
			<![CDATA[ RES_ID >= #cdt.startResId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endResId" >
			<![CDATA[ RES_ID <= #cdt.endResId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.upTime" >
			UP_TIME = #cdt.upTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="upTimes" >
			UP_TIME in ($upTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startUpTime" >
			<![CDATA[ UP_TIME >= #cdt.startUpTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endUpTime" >
			<![CDATA[ UP_TIME <= #cdt.endUpTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.upType" >
			UP_TYPE = #cdt.upType:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="upTypes" >
			UP_TYPE in ($upTypes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startUpType" >
			<![CDATA[ UP_TYPE >= #cdt.startUpType:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endUpType" >
			<![CDATA[ UP_TYPE <= #cdt.endUpType:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.resApplyId" >
			RES_APPLY_ID = #cdt.resApplyId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="resApplyIds" >
			RES_APPLY_ID in ($resApplyIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startResApplyId" >
			<![CDATA[ RES_APPLY_ID >= #cdt.startResApplyId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endResApplyId" >
			<![CDATA[ RES_APPLY_ID <= #cdt.endResApplyId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataCenterId" >
			DATA_CENTER_ID = #cdt.dataCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataCenterIds" >
			DATA_CENTER_ID in ($dataCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataCenterId" >
			<![CDATA[ DATA_CENTER_ID >= #cdt.startDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataCenterId" >
			<![CDATA[ DATA_CENTER_ID <= #cdt.endDataCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.resCenterId" >
			RES_CENTER_ID = #cdt.resCenterId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="resCenterIds" >
			RES_CENTER_ID in ($resCenterIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startResCenterId" >
			<![CDATA[ RES_CENTER_ID >= #cdt.startResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endResCenterId" >
			<![CDATA[ RES_CENTER_ID <= #cdt.endResCenterId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.netZoneId" >
			NET_ZONE_ID = #cdt.netZoneId:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="netZoneIds" >
			NET_ZONE_ID in ($netZoneIds$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startNetZoneId" >
			<![CDATA[ NET_ZONE_ID >= #cdt.startNetZoneId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endNetZoneId" >
			<![CDATA[ NET_ZONE_ID <= #cdt.endNetZoneId:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.beforeCpuCount" >
			BEFORE_CPU_COUNT = #cdt.beforeCpuCount:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="beforeCpuCounts" >
			BEFORE_CPU_COUNT in ($beforeCpuCounts$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startBeforeCpuCount" >
			<![CDATA[ BEFORE_CPU_COUNT >= #cdt.startBeforeCpuCount:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endBeforeCpuCount" >
			<![CDATA[ BEFORE_CPU_COUNT <= #cdt.endBeforeCpuCount:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.beforeMemSize" >
			BEFORE_MEM_SIZE = #cdt.beforeMemSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="beforeMemSizes" >
			BEFORE_MEM_SIZE in ($beforeMemSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startBeforeMemSize" >
			<![CDATA[ BEFORE_MEM_SIZE >= #cdt.startBeforeMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endBeforeMemSize" >
			<![CDATA[ BEFORE_MEM_SIZE <= #cdt.endBeforeMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.beforeDiskSize" >
			BEFORE_DISK_SIZE = #cdt.beforeDiskSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="beforeDiskSizes" >
			BEFORE_DISK_SIZE in ($beforeDiskSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startBeforeDiskSize" >
			<![CDATA[ BEFORE_DISK_SIZE >= #cdt.startBeforeDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endBeforeDiskSize" >
			<![CDATA[ BEFORE_DISK_SIZE <= #cdt.endBeforeDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.afterCpuCount" >
			AFTER_CPU_COUNT = #cdt.afterCpuCount:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="afterCpuCounts" >
			AFTER_CPU_COUNT in ($afterCpuCounts$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startAfterCpuCount" >
			<![CDATA[ AFTER_CPU_COUNT >= #cdt.startAfterCpuCount:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endAfterCpuCount" >
			<![CDATA[ AFTER_CPU_COUNT <= #cdt.endAfterCpuCount:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.afterMemSize" >
			AFTER_MEM_SIZE = #cdt.afterMemSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="afterMemSizes" >
			AFTER_MEM_SIZE in ($afterMemSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startAfterMemSize" >
			<![CDATA[ AFTER_MEM_SIZE >= #cdt.startAfterMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endAfterMemSize" >
			<![CDATA[ AFTER_MEM_SIZE <= #cdt.endAfterMemSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.afterDiskSize" >
			AFTER_DISK_SIZE = #cdt.afterDiskSize:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="afterDiskSizes" >
			AFTER_DISK_SIZE in ($afterDiskSizes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startAfterDiskSize" >
			<![CDATA[ AFTER_DISK_SIZE >= #cdt.startAfterDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endAfterDiskSize" >
			<![CDATA[ AFTER_DISK_SIZE <= #cdt.endAfterDiskSize:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.upor" >
			UPOR like #cdt.upor:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.uporEqual" >
			UPOR = #cdt.uporEqual:VARCHAR#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="upors" >
			UPOR in ($upors$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.upDesc" >
			UP_DESC like #cdt.upDesc:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom1" >
			CUSTOM_1 = #cdt.custom1:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom1s" >
			CUSTOM_1 in ($custom1s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom1" >
			<![CDATA[ CUSTOM_1 >= #cdt.startCustom1:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom1" >
			<![CDATA[ CUSTOM_1 <= #cdt.endCustom1:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom2" >
			CUSTOM_2 = #cdt.custom2:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom2s" >
			CUSTOM_2 in ($custom2s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom2" >
			<![CDATA[ CUSTOM_2 >= #cdt.startCustom2:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom2" >
			<![CDATA[ CUSTOM_2 <= #cdt.endCustom2:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom3" >
			CUSTOM_3 = #cdt.custom3:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="custom3s" >
			CUSTOM_3 in ($custom3s$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCustom3" >
			<![CDATA[ CUSTOM_3 >= #cdt.startCustom3:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCustom3" >
			<![CDATA[ CUSTOM_3 <= #cdt.endCustom3:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom4" >
			CUSTOM_4 like #cdt.custom4:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom5" >
			CUSTOM_5 like #cdt.custom5:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.custom6" >
			CUSTOM_6 like #cdt.custom6:VARCHAR# 
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.dataStatus" >
			DATA_STATUS = #cdt.dataStatus:INTEGER#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="dataStatuss" >
			DATA_STATUS in ($dataStatuss$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startDataStatus" >
			<![CDATA[ DATA_STATUS >= #cdt.startDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endDataStatus" >
			<![CDATA[ DATA_STATUS <= #cdt.endDataStatus:INTEGER# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.createTime" >
			CREATE_TIME = #cdt.createTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="createTimes" >
			CREATE_TIME in ($createTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startCreateTime" >
			<![CDATA[ CREATE_TIME >= #cdt.startCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endCreateTime" >
			<![CDATA[ CREATE_TIME <= #cdt.endCreateTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.modifyTime" >
			MODIFY_TIME = #cdt.modifyTime:BIGINT#
		</isNotEmpty>
		<isNotEmpty prepend="and" property="modifyTimes" >
			MODIFY_TIME in ($modifyTimes$)
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.startModifyTime" >
			<![CDATA[ MODIFY_TIME >= #cdt.startModifyTime:BIGINT# ]]>
		</isNotEmpty>
		<isNotEmpty prepend="and" property="cdt.endModifyTime" >
			<![CDATA[ MODIFY_TIME <= #cdt.endModifyTime:BIGINT# ]]>
		</isNotEmpty>
	</sql>
	

	<sql id="sql_update_columns">
		<isNotNull prepend="," property="record.id"> 
			ID = #record.id:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.mntId"> 
			MNT_ID = #record.mntId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.resId"> 
			RES_ID = #record.resId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.upTime"> 
			UP_TIME = #record.upTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.upType"> 
			UP_TYPE = #record.upType:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.resApplyId"> 
			RES_APPLY_ID = #record.resApplyId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.dataCenterId"> 
			DATA_CENTER_ID = #record.dataCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.resCenterId"> 
			RES_CENTER_ID = #record.resCenterId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.netZoneId"> 
			NET_ZONE_ID = #record.netZoneId:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.beforeCpuCount"> 
			BEFORE_CPU_COUNT = #record.beforeCpuCount:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.beforeMemSize"> 
			BEFORE_MEM_SIZE = #record.beforeMemSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.beforeDiskSize"> 
			BEFORE_DISK_SIZE = #record.beforeDiskSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.afterCpuCount"> 
			AFTER_CPU_COUNT = #record.afterCpuCount:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.afterMemSize"> 
			AFTER_MEM_SIZE = #record.afterMemSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.afterDiskSize"> 
			AFTER_DISK_SIZE = #record.afterDiskSize:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.upor"> 
			UPOR = #record.upor:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.upDesc"> 
			UP_DESC = #record.upDesc:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom1"> 
			CUSTOM_1 = #record.custom1:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom2"> 
			CUSTOM_2 = #record.custom2:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom3"> 
			CUSTOM_3 = #record.custom3:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.custom4"> 
			CUSTOM_4 = #record.custom4:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom5"> 
			CUSTOM_5 = #record.custom5:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.custom6"> 
			CUSTOM_6 = #record.custom6:VARCHAR#
		</isNotNull>
		<isNotNull prepend="," property="record.dataStatus"> 
			DATA_STATUS = #record.dataStatus:INTEGER#
		</isNotNull>
		<isNotNull prepend="," property="record.createTime"> 
			CREATE_TIME = #record.createTime:BIGINT#
		</isNotNull>
		<isNotNull prepend="," property="record.modifyTime"> 
			MODIFY_TIME = #record.modifyTime:BIGINT#
		</isNotNull>
	</sql>
	

	<sql id="sql_query_columns">
		ID, MNT_ID, RES_ID, UP_TIME, UP_TYPE, RES_APPLY_ID, 
		DATA_CENTER_ID, RES_CENTER_ID, NET_ZONE_ID, BEFORE_CPU_COUNT, BEFORE_MEM_SIZE, BEFORE_DISK_SIZE, 
		AFTER_CPU_COUNT, AFTER_MEM_SIZE, AFTER_DISK_SIZE, UPOR, UP_DESC, CUSTOM_1, 
		CUSTOM_2, CUSTOM_3, CUSTOM_4, CUSTOM_5, CUSTOM_6, DATA_STATUS, 
		CREATE_TIME, MODIFY_TIME
	</sql>
	

	

	<select id="selectList" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PS_MNT_RES_FLOW.sql_query_columns" />
		from PS_MNT_RES_FLOW 
			<dynamic prepend="where" >
				<include refid="PS_MNT_RES_FLOW.sql_query_where"/>
			</dynamic>
		order by 
			<isNotEmpty property="orders" >
				$orders$
			</isNotEmpty>
			<isEmpty property="orders" >
				ID
			</isEmpty>
	</select>
	<select id="selectCount" parameterClass="java.util.Map" resultClass="java.lang.Long">
		select count(1) from PS_MNT_RES_FLOW 
			<dynamic prepend="where" >
				<include refid="PS_MNT_RES_FLOW.sql_query_where"/>
			</dynamic>
	</select>
	<select id="selectById" parameterClass="java.util.Map" resultMap="queryResult">
		select 
			<include refid="PS_MNT_RES_FLOW.sql_query_columns" />
		from PS_MNT_RES_FLOW where ID=#id:BIGINT# and DATA_STATUS=1  
	</select>
	

	

	<insert id="insert" parameterClass="java.util.Map">
		insert into PS_MNT_RES_FLOW(
			ID, MNT_ID, RES_ID, UP_TIME, UP_TYPE, 
			RES_APPLY_ID, DATA_CENTER_ID, RES_CENTER_ID, NET_ZONE_ID, BEFORE_CPU_COUNT, 
			BEFORE_MEM_SIZE, BEFORE_DISK_SIZE, AFTER_CPU_COUNT, AFTER_MEM_SIZE, AFTER_DISK_SIZE, 
			UPOR, UP_DESC, CUSTOM_1, CUSTOM_2, CUSTOM_3, 
			CUSTOM_4, CUSTOM_5, CUSTOM_6, DATA_STATUS, CREATE_TIME, 
			MODIFY_TIME)
		values (
			#record.id:BIGINT#, #record.mntId:BIGINT#, #record.resId:BIGINT#, #record.upTime:BIGINT#, #record.upType:INTEGER#, 
			#record.resApplyId:BIGINT#, #record.dataCenterId:BIGINT#, #record.resCenterId:BIGINT#, #record.netZoneId:BIGINT#, #record.beforeCpuCount:BIGINT#, 
			#record.beforeMemSize:BIGINT#, #record.beforeDiskSize:BIGINT#, #record.afterCpuCount:BIGINT#, #record.afterMemSize:BIGINT#, #record.afterDiskSize:BIGINT#, 
			#record.upor:VARCHAR#, #record.upDesc:VARCHAR#, #record.custom1:BIGINT#, #record.custom2:BIGINT#, #record.custom3:BIGINT#, 
			#record.custom4:VARCHAR#, #record.custom5:VARCHAR#, #record.custom6:VARCHAR#, #record.dataStatus:INTEGER#, #record.createTime:BIGINT#, 
			#record.modifyTime:BIGINT#)
	</insert>
	

	

	<update id="updateById" parameterClass="java.util.Map">
		update PS_MNT_RES_FLOW
			<dynamic prepend="set" > 
				<include refid="PS_MNT_RES_FLOW.sql_update_columns"/> 
			</dynamic>
		where ID = #id:BIGINT#
	</update>
	<update id="updateByCdt" parameterClass="java.util.Map">
		update PS_MNT_RES_FLOW
			<dynamic prepend="set" > 
				<include refid="PS_MNT_RES_FLOW.sql_update_columns"/> 
			</dynamic>
			<dynamic prepend="where" > 
				<include refid="PS_MNT_RES_FLOW.sql_query_where"/> 
			</dynamic>
	</update>
	
	

	

	<delete id="deleteById" parameterClass="java.util.Map">
		delete from PS_MNT_RES_FLOW where ID = #id:BIGINT#
	</delete>
	<delete id="deleteByCdt" parameterClass="java.util.Map">
		delete from PS_MNT_RES_FLOW
			<dynamic prepend="where" > 
				<include refid="PS_MNT_RES_FLOW.sql_query_where"/> 
			</dynamic>
	</delete>
	



</sqlMap>
